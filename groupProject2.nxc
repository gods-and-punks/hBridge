//	File: dioDipLed2_0.nxc
//	Auth: Edgar Salas-Sanchez
//	Date: 11/25/2018
//	Vers: 1.1a - PCF8574A read DIP switch and light LED. Uses bitwise shift.
//	      1.1b - same but doesn't use bitwise shift; I want yo confirm my underrstanding.
//	      2.0 - same but refer to dioOutput2_0 and dioInput2_0.
//	Desc: LEDs configured to sink (i.e. when bit is "O" then LED lights up)
//	      DIP switch configured with pull-up resistors.
//	Note: Uses PCF8574A chip (hence address A2=A1=A0 set to 0=0=0 hence 0x70)

#define I2CAddr8574 0x70		//0x40 8574 or 0x70 8574A. NB: 0x70 = 0111 0000

task main()
{
	//array variables (since NXC's I2C functions take array variables)
	byte WriteBuf[2];		//set up two one-byte variables
	byte ReadBuf[];			//Byte received from PCF8574
	int RdCnt = 1;			//number of bytes read

	//button variables
	bool orangeButtonPushed, rightArrowButtonPushed;
	//counting variables
	int decimalNumber;		//values 0 to 255
  int controlVal;
  int nbytes;
	byte value = 0;

	SetSensorLowspeed(S1);		//PCF8574A connect to NXT S1
	//(1) Set adress of PCF8574A (i.e. 0x70) and memory register.
	WriteBuf[0] = I2CAddr8574;	//this is the address 0x70
	WriteBuf[1] = 0xFF;		//WriteBuf[1] is the register; filling it with ones sets the port for reading.
	I2CBytes(S1, WriteBuf, RdCnt, ReadBuf);	//OK, now port set up for reading.

	TextOut (0, LCD_LINE1, "Right Btn starts");
	do
	{
		rightArrowButtonPushed = ButtonPressed(BTNRIGHT, FALSE);
	} while(!rightArrowButtonPushed);	//end do
	TextOut (0, LCD_LINE1, "Orange button quits");

	do
	{
		orangeButtonPushed = ButtonPressed(BTNCENTER, FALSE);
		//if pressed, then orange button becomes TRUE.
		//if not pressed, then orange button is FALSE.

		//(2) Set up to read the PCF8574A port.
		WriteBuf[0] = I2CAddr8574;
		WriteBuf[1] = 0xFF;		//set up to read port.
		I2CBytes(S1, WriteBuf, RdCnt, ReadBuf);
		//(3) ReadBuf[0] should now have data that was read froim port.
		decimalNumber = ReadBuf[0];	//value from PCF8574
		TextOut(0, LCD_LINE3, FormatNum("Value Read: %3d", decimalNumber));

		//play beep for switch 1 being closed.
		if((decimalNumber > 1) || (decimalNumber < 1))
		{
      //(4) Now write to port, thus lighting up corresponding LEDs by writting zeros to port.
      controlVal = 0;
      WriteBuf[0] = I2CAddr8574;
		  WriteBuf[1] = controlVal;               //writting LOW to D0
		  I2CBytes(S1, WriteBuf, RdCnt, ReadBuf);
			//PlaySound(SOUND_LOW_BEEP);
			Wait(100);
		}
    else
    {
      //(4) Now write to port, thus lighting up corresponding LEDs by writting zeros to port.
      controlVal = 255;
      WriteBuf[0] = I2CAddr8574;
		  WriteBuf[1] = controlVal;               //writting HI to D0
		  I2CBytes(S1, WriteBuf, RdCnt, ReadBuf);
			//PlaySound(SOUND_LOW_BEEP);
			Wait(100);
    }			//end if

		Wait(50);		//wait 50 milliseconds

	} while(!orangeButtonPushed);	//end do

	TextOut(0, LCD_LINE5, "Finished!");
	//PlaySound(SOUND_DOUBLE_BEEP);
}					//end main
