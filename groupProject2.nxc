//   FILE: groupProject2.nxc
//   AUTH: Ginger Wilkins, Edgar Salas-Sanchez
//   DATE: 12/03/2018
//   DESC: USER CONTROLLOED MOTOR DRIVER USING 12 DIGIT KEYPAD AS CONTROLLER.
//         SIGNAL IS PASSED THROUGH PCF8574A PINS TO H-BRIDGE TO CONTROL DC MOTOR
//         DIRECTION (CW, CCW, FREE SPIN, or BRAKE). THE DIRECTION OF THE MOTOR
//         IS DISPLAYED ON THE NXT BRIXK LCD SCREEN. KEYPAD BUTTONS FOR CONTROL
//         ARE AS FOLLOWS:
//         2 = FREE SPIN
//         4 = CW ROTATION
//         6 = CCW ROTATION
//         8 = BRAKE

#define I2Cport S1                         //port number for keypad
#define I2Cport2 S2                        //port number for motor
#define I2CAddr8574 0x70                   //I2C adress 0x40 8574 or 0x70 8574A

//global variable
//array variables (since NXC's I2C functions take array variables)
byte WriteBuf[] = {I2CAddr8574, 0x00};    //sets up PCF8574A for writing
byte WriteBuf2[]= {I2CAddr8574, 0x00};
byte ReadBuf[];                            //data received from PCF8574A. Won't be reading any adata but need this for I2CBytes
byte ReadBuf2[];
int RdCnt = 1;                             //number of bytes to read.

void motorDrive(byte motorVal)
{
     WriteBuf2[1] = motorVal;
     I2CBytes(I2Cport2, WriteBuf2,RdCnt, ReadBuf2);
}

long GetKey()
{
     WriteBuf[1] = 0xDF; //col1: 0xFB = 251 decimal = 1111 011 1; Sets col 1 HI
     I2CBytes(I2Cport, WriteBuf,RdCnt, ReadBuf);

     if(ReadBuf[0] == 0xDD) return(1);     //row 1, "1" key, 187, 0111 011 1
     if(ReadBuf[0] == 0xDB) return(4);     //row 2, "4" key, 219, 1011 011 1
     if(ReadBuf[0] == 0xD7) return(7);     //row 3, "7" key, 235, 1101 011 1
     if(ReadBuf[0] == 0xCF) return(14);    //row 4, "*" key, 243, 1110 011 1

     WriteBuf[1] = 0xBF; //col1: 0xFD = 253 decimal = 1111 101 1; Sets col 2 HI
     I2CBytes(I2Cport, WriteBuf,RdCnt, ReadBuf);

     if(ReadBuf[0] == 0xBD) return(2);     //row 1, "2" key, 189, 1 0111 101
     if(ReadBuf[0] == 0xBB) return(5);     //row 2, "5" key, 221, 1 1011 101
     if(ReadBuf[0] == 0xB7) return(8);     //row 3, "8" key, 237, 1 1101 101
     if(ReadBuf[0] == 0xAF) return(16);    //row 4, "0" key, 245, 1 1110 101

     WriteBuf[1] = 0x7F; //col3: 0xFE = 254 decimal = 1111 110 1; Sets col 3 HI
     I2CBytes(I2Cport, WriteBuf,RdCnt, ReadBuf);

     if(ReadBuf[0] == 0x7D) return(3);     //row 1, "3" key, 190, 1 0111 110
     if(ReadBuf[0] == 0x7B) return(6);     //row 2, "6" key, 222, 1 1011 110
     if(ReadBuf[0] == 0x77) return(9);     //row 3, "9" key, 238, 1 1101 110
     if(ReadBuf[0] == 0x6F) return(18);    //row 4, "#" key, 246, 1 1110 110

     return(-1); //if no key pressed

} //end of GetKey

long SetKey()
{
     long key;
     string keypad = "Press a key";
     byte Val = 0x00;
     string direction;
     
     SetSensorLowspeed(I2Cport);           //PCF8574A connect to NXT on S1
     SetSensorLowspeed(I2Cport2);          //

     TextOut(0,LCD_LINE1,keypad);          //show initial value
     while(true)
     {
          while(GetKey() < 0);             //do nothing unless a key is pressed

          key = GetKey();                  //get key value
          PlayTone(1000,5);                //make key pressed sound
          switch(key)                      //case based on key value
          {
               case -1:              //no key, do nothing
                    break;
               case 2:               //"2" key, free spin
                    Val = 0x0A;      //D1 & D3 set HI

                    direction = "Free Spin";
                    keypad = "2";
                    break;
               case 4:               //'4" key, rotate CW
                    Val = 0x0C;      //D2 & D3 set HI
                                     //D0 & D1 set LO
                    direction = "Go CW";
                    keypad = "4";
                    break;
               case 6:               //'6" key, rotate CCW
                    Val = 0x03;      //D2 & D3 set HI
                                     //D0 & D1 set LO
                    direction = "Go CCW";
                    keypad = "6";
                    break;
               case 8:               //'8" key, brake
                    Val = 0x0F;      //D2 & D3 set HI
                                     //D0 & D1 set LO
                    direction = "BRAKE";
                    keypad = "8";
                    break;
               default:              //do nothing for keys besides "2", "4", "6", or "8" pressed
                                     //D0, D1, D2,  & D3 set LO
                    keypad = "Wrong Key";
                    PlayTone(500,5);
                    break;
          }
          ClearScreen();
          Wait(10);
          motorDrive(Val);
          TextOut(0,LCD_LINE1,keypad);
          TextOut(0,LCD_LINE3,direction);
          Wait(10);
          while(GetKey() >= 0);            //wait for key to be unpressed
     }//end of while
}

task main()
{
     SetKey();       //call SetKey routine
}                    //end of main

